// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v4.25.2
// source: proto/order_item.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "orderitem";

export interface OrderItem {
  id: number;
  orderId: number;
  productId: number;
  quantity: number;
  price: number;
  total: number;
}

export interface GetOrderItemRequest {
  id: number;
}

export interface CreateOrderItemRequest {
  orderItem: OrderItem | undefined;
}

export interface UpdateOrderItemRequest {
  orderItem: OrderItem | undefined;
}

export interface DeleteOrderItemRequest {
  id: number;
}

export interface OrderItemsResponse {
  orderItems: OrderItem[];
}

export interface ListOrderItemRequest {
}

export const ORDERITEM_PACKAGE_NAME = "orderitem";

export interface OrderItemServiceClient {
  getOrderItem(request: GetOrderItemRequest): Observable<OrderItem>;

  createOrderItem(request: CreateOrderItemRequest): Observable<OrderItem>;

  updateOrderItem(request: UpdateOrderItemRequest): Observable<OrderItem>;

  deleteOrderItem(request: DeleteOrderItemRequest): Observable<OrderItem>;

  listOrderItems(request: ListOrderItemRequest): Observable<OrderItemsResponse>;
}

export interface OrderItemServiceController {
  getOrderItem(request: GetOrderItemRequest): Promise<OrderItem> | Observable<OrderItem> | OrderItem;

  createOrderItem(request: CreateOrderItemRequest): Promise<OrderItem> | Observable<OrderItem> | OrderItem;

  updateOrderItem(request: UpdateOrderItemRequest): Promise<OrderItem> | Observable<OrderItem> | OrderItem;

  deleteOrderItem(request: DeleteOrderItemRequest): Promise<OrderItem> | Observable<OrderItem> | OrderItem;

  listOrderItems(
    request: ListOrderItemRequest,
  ): Promise<OrderItemsResponse> | Observable<OrderItemsResponse> | OrderItemsResponse;
}

export function OrderItemServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      "getOrderItem",
      "createOrderItem",
      "updateOrderItem",
      "deleteOrderItem",
      "listOrderItems",
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("OrderItemService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("OrderItemService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ORDER_ITEM_SERVICE_NAME = "OrderItemService";
